package forme;

import domen.IstorijaStatusaRada;
import domen.Profesor;
import domen.Rad;
import domen.StatusRada;
import domen.Student;
import forme.model.IstorijaStatusaRadaTableModel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import komunikacija.Komunikacija;
import transfer.TransferObjekatOdgovor;
import transfer.TransferObjekatZahtev;
import util.Konstante;

public class FrmGlavna extends javax.swing.JFrame {

    /**
     * Creates new form FrmGlavna
     */
    public FrmGlavna() {
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcbStudenti = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcbProfesori = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jtxtTema = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblIstorijaRada = new javax.swing.JTable();
        jbtnDodaj = new javax.swing.JButton();
        jbtnObrisi = new javax.swing.JButton();
        jbtnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Student:");

        jLabel2.setText("Mentor:");

        jLabel3.setText("Tema:");

        jtblIstorijaRada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblIstorijaRada);

        jbtnDodaj.setText("Dodaj status rada");
        jbtnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajActionPerformed(evt);
            }
        });

        jbtnObrisi.setText("Obrisi status rada");
        jbtnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiActionPerformed(evt);
            }
        });

        jbtnSacuvaj.setText("Sacuvaj rad");
        jbtnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbtnDodaj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnObrisi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtnSacuvaj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbProfesori, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbStudenti, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtxtTema))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbStudenti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbProfesori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnDodaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnObrisi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnSacuvaj)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajActionPerformed
        IstorijaStatusaRadaTableModel model = (IstorijaStatusaRadaTableModel) jtblIstorijaRada.getModel();
        model.dodajStatus();
    }//GEN-LAST:event_jbtnDodajActionPerformed

    private void jbtnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiActionPerformed
        int red = jtblIstorijaRada.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Niste odabrali red!");
        } else {
            IstorijaStatusaRadaTableModel model = (IstorijaStatusaRadaTableModel) jtblIstorijaRada.getModel();
            model.obrisiStatus(red);
        }
    }//GEN-LAST:event_jbtnObrisiActionPerformed

    private void jbtnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajActionPerformed
        try {
            IstorijaStatusaRadaTableModel model = (IstorijaStatusaRadaTableModel) jtblIstorijaRada.getModel();
            Rad rad = model.getRad();

            Student s = (Student) jcbStudenti.getSelectedItem();
            Profesor p = (Profesor) jcbProfesori.getSelectedItem();
            String tema = jtxtTema.getText();

            int radID = vratiKljuc();
            System.out.println(radID);
            rad.setRadID(radID);
            rad.setStudent(s);
            rad.setProfesor(p);
            rad.setTema(tema);

            if (!izvrsiValidaciju(rad)) {
                JOptionPane.showMessageDialog(this, "Nije prosla validacija.");
                return;
            }

            TransferObjekatZahtev toz = new TransferObjekatZahtev();
            toz.setOperacija(Konstante.SACUVAJ_RAD);
            toz.setParametar(rad);
            Komunikacija.getInstance().posaljiZahtev(toz);

            JOptionPane.showMessageDialog(this, "Rad je uspesno sacuvan.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Neuspesno cuvanje rada.");
        }
    }//GEN-LAST:event_jbtnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmGlavna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmGlavna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmGlavna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGlavna.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmGlavna().setVisible(true);
            }
        });
    }

    private void srediFormu() {
        try {
            List<Student> listaStudenata = new ArrayList<>();
            TransferObjekatZahtev toz = new TransferObjekatZahtev();
            toz.setOperacija(Konstante.VRATI_STUDENTE);
            Komunikacija.getInstance().posaljiZahtev(toz);
            TransferObjekatOdgovor too = Komunikacija.getInstance().primiOdgovor();
            listaStudenata = (List<Student>) too.getRezultat();
            jcbStudenti.setModel(new DefaultComboBoxModel(listaStudenata.toArray()));

            List<Profesor> listaProfesora = new ArrayList<>();
            TransferObjekatZahtev toz1 = new TransferObjekatZahtev();
            toz1.setOperacija(Konstante.VRATI_PROFESORE);
            Komunikacija.getInstance().posaljiZahtev(toz1);
            TransferObjekatOdgovor too1 = Komunikacija.getInstance().primiOdgovor();
            listaProfesora = (List<Profesor>) too1.getRezultat();
            jcbProfesori.setModel(new DefaultComboBoxModel(listaProfesora.toArray()));

            IstorijaStatusaRadaTableModel model = new IstorijaStatusaRadaTableModel(new Rad());
            jtblIstorijaRada.setModel(model);

            JComboBox jcbStatusi = new JComboBox();
            TableColumn tc = jtblIstorijaRada.getColumnModel().getColumn(1);
            tc.setCellEditor(new DefaultCellEditor(jcbStatusi));

            List<StatusRada> listaStatusa = new ArrayList<>();
            TransferObjekatZahtev toz2 = new TransferObjekatZahtev();
            toz2.setOperacija(Konstante.VRATI_STATUSE);
            Komunikacija.getInstance().posaljiZahtev(toz2);
            TransferObjekatOdgovor too2 = Komunikacija.getInstance().primiOdgovor();
            listaStatusa = (List<StatusRada>) too2.getRezultat();
            jcbStatusi.setModel(new DefaultComboBoxModel(listaStatusa.toArray()));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Neuspesno ucitavanje listi na formu.");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDodaj;
    private javax.swing.JButton jbtnObrisi;
    private javax.swing.JButton jbtnSacuvaj;
    private javax.swing.JComboBox jcbProfesori;
    private javax.swing.JComboBox jcbStudenti;
    private javax.swing.JTable jtblIstorijaRada;
    private javax.swing.JTextField jtxtTema;
    // End of variables declaration//GEN-END:variables

    private int vratiKljuc() throws IOException, ClassNotFoundException {

        TransferObjekatZahtev toz = new TransferObjekatZahtev();
        toz.setOperacija(Konstante.VRATI_KLJUC);
        Komunikacija.getInstance().posaljiZahtev(toz);
        TransferObjekatOdgovor too = Komunikacija.getInstance().primiOdgovor();

        return (int) too.getRezultat();
    }

    private boolean izvrsiValidaciju(Rad rad) {
        for (IstorijaStatusaRada isr : rad.getLista()) {
            if (!isr.getStatusRada().getNaziv().equals("Prijavljen")) {
                return false;
            }
        }

        return true;
    }
}
